3 /* declarations of global variable */
8 /* It can drive at a directly linked directory
9    It returns status code ) 0 -> changed successfully, -1 -> there occurs an error ( typically, there doesn't exist such directory )
10  */
19 // from global field in shell.h
24 // j == 7 so [8]
28 /* now, directory_name consists of all directories to reach the working directory from root in descending order
29 	 * ex) /a/b/c/d
30 	 * => d c b a
31 	 */
33 /* so, we need to print them in decsending order */
56 /* Algorithm's below
57  * from i = 0 to 7(Max length of directory name)
58  * in i 'th place :
59  * 	1. if there exist different character in same place before the comparison => They are different.
60  *	2. (else) if this place is end of the string in both sides => They are same. ( close for-loop )
61  *	( Why we break this comparison is there can exist different string next to its ending )
62  *	ex) {'a', 'b', '0', 32, ...} == {'a', 'b', '0', 123, ...} but 32 != 123
63  * Before it, we saw all posibillity.
64  */
76 // chainedDirectory *temp;
77 // if the parameter is ".."
79 /* Predicting the problem when cd from root to .. */
89 // If it uses single indirect pointer
97 // 8th member of the array.
106 /* Processing the one remaining data block which generally not takes up full space */
112 // 8th member of the array.
121 // There are no such directory.
122 // It uses direct pointer(s)
128 // 8th member of the array.
137 /* Processing the one remaining data block which generally not takes up full space */
143 // 8th member of the array.
152 // There are no such directory.
164 // '$ mycd' => go to root
168 // If the path starts with the letter referring to the root
187 // The length of directory name field exceeds
189 // If there doesn't exist such directory
190 // TODO

